#!/usr/bin/env -S zsh -eo pipefail

###############################################################################
# kforward 2.0                                                                #
# Altair Bueno MIT license                                                    #
# https://github.com/Altair-Bueno/Demeter                                     #
#                                                                             #
# Port forwarding between localhost and Kubernetes services.                  #
# Lists all services from all namespaces and allows the user to choose the    #
# desired service to connect                                                  #
###############################################################################

function kubectl_get_services {
    kubectl get "services" \
        --all-namespaces \
        "-ojsonpath={range .items[*]}{.kind}/{.metadata.namespace}/{.metadata.name}{'\n'}{end}" \
        | tr '[:upper:]' '[:lower:]' 
}

function kubectl_get_ports {
    local namespace="$1"
    local kind="$2"
    local name="$3"

    kubectl get "$kind" \
        "--namespace=$namespace" \
        "$name" \
        "-ojsonpath={range .spec.ports[*]}{.port}/{.name}{'\n'}{end}"
}

function kubectl_port_forward {
    local namespace="$1"
    local kind="$2"
    local name="$3"
    local local_port="$4"
    local resource_port="$5"
    kubectl port-forward \
        "--namespace=$namespace" \
        "$kind/$name" \
        "$local_port:$resource_port"
}

function main {
    local local_port="$1"
    local query="$2"
    local resource
    local resource_port

    resource="$(
        kubectl_get_services \
        | fzf '--header=Choose a service' \
            --delimiter=/ "--query=$query" \
            '--preview=kubectl get --namespace {2} {1,3} -oyaml | bat --language=yaml --color=always --plain'
    )"
    [[ "$resource" =~ '(.*)/(.*)/(.*)' ]]
    local kind="${match[1]}"
    local namespace="${match[2]}"
    local name="${match[3]}"

    resource_port="$(
    kubectl_get_ports "$namespace" "$kind" "$name" \
        | fzf --select-1 --no-sort '--header=Choose a TCP port' \
        | cut -d / -f 1
    )"

    echo "Forwarding $resource to local port $local_port"
    echo "http://localhost:$local_port"
    echo "https://localhost:$local_port"
    kubectl_port_forward "$namespace" "$kind" "$name" "$local_port" "$resource_port"
}


while getopts "p:hd" opt; do
    case "$opt" in
        p)
        local local_port="$OPTARG"
        if [[ ! "$local_port" =~ '[[:digit:]]+' ]]
        then
            echo "Invalid port: $local_port"
            exit 1
        fi
        ;;
        d)
        set -x
        ;;
        h)
        cat <<EOF
usage: $(basename "$0") [-h] [-p PORT] [query]

Port forwards a Kubernetes service to your local computer

positional arguments:
  query                query to start the search with

options:
  -h                   show this help message and exit
  -d                   enable debug mode
  -p PORT              local port to use (defaults to 8080)
EOF
        exit
        ;;
    esac
done
shift $((OPTIND-1))

main "${local_port:-8080}" "$@"
