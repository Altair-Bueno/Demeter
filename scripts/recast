#!/usr/bin/env -S deno run -q --allow-read --allow-write --allow-env

import * as toml from "https://deno.land/std@0.152.0/encoding/toml.ts";
import * as yaml from "https://deno.land/std@0.152.0/encoding/yaml.ts";
import { readAll } from "https://deno.land/std@0.152.0/streams/conversion.ts";
import yargs from "https://deno.land/x/yargs@v17.5.1-deno/deno.ts";

const RECAST = "recast";
const RECAST_DESC = `Transform a serialization format into another`;
const RECAST_VERSION = "0.1.0";

// Constants
const F_JSON = "json";
const F_YAML = "yaml";
const F_TOML = "toml";
const FORMATS = new Map();
FORMATS.set(F_JSON, JSON);
FORMATS.set(F_YAML, yaml);
FORMATS.set(F_TOML, toml);
const FORMATS_LIST = Array.from(FORMATS.keys());

const args = yargs(Deno.args)
  // @ts-ignore: This file is treated as JS, but linted as TypeScript...
  .command("$0 [input]", RECAST_DESC, (yargs) => {
    yargs.positional("input", {
      description: "Input file. Defaults to STDIN",
      string: true,
    });
  })
  .options({
    from: {
      description: "Input format",
      string: true,
      choices: FORMATS_LIST,
      default: F_JSON,
    },
    to: {
      description: "Output format",
      string: true,
      choices: FORMATS_LIST,
      default: F_JSON,
    },
    o: {
      description: "Output file. Defaults to STDOUT",
      string: true,
    },
  })
  .completion("completion")
  .scriptName(RECAST)
  .version(RECAST_VERSION)
  .help()
  .strict()
  .env(false)
  .parse();

const inputFile = args.input ? await Deno.open(args.input) : Deno.stdin;
const serializedInput = await readAll(inputFile);
inputFile.close();

const textDecoder = new TextDecoder();
const serializedInputString = textDecoder.decode(serializedInput);

const obj = FORMATS.get(args.from).parse(serializedInputString);
const serializedOutputString = FORMATS.get(args.to).stringify(obj);

const textEncoder = new TextEncoder();
const serializedOutput = textEncoder.encode(serializedOutputString);
const outputFile = args.o ? await Deno.open(args.o) : Deno.stdout;
await outputFile.write(serializedOutput);
outputFile.close();
