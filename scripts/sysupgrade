#!/usr/bin/env zsh

###############################################################################
# sysupgrade 1.0                                                              #
# Altair Bueno MIT license                                                    #
# https://github.com/Altair-Bueno/Demeter                                     #
#                                                                             #
# Updates toolchains and software installed on a macOS system                 #
#                                                                             #
# Usage:                                                                      #
# sysupgrade [toolchain]                                                      #
###############################################################################
function update_homebrew {
    export HOMEBREW_COLOR=true
    brew update
    brew upgrade
    brew list --cask | xargs brew upgrade --cask
    brew autoremove
    brew cleanup
    unset HOMEBREW_COLOR
}
function update_arch {
    yay
}
function update_zsh {
    sheldon --color=always lock --update
}
function update_rust {
    rustup self update
    rustup update stable
    cargo install-update -a
}
function update_pip {
    python3 -m pip freeze | \
        grep -v 'file://'| \
        xargs python3 -m pip install --upgrade pip
}
function upgrade_pnpm {
    pnpm up -g
}

################################################################################

declare -A cli

[[ -x "$(command -v pnpm)" ]]    && cli[node]=upgrade_pnpm
[[ -x "$(command -v zsh)" ]]     && cli[zsh]=update_zsh
[[ -x "$(command -v python3)" ]] && cli[pip]=update_pip
[[ -x "$(command -v rustup)" ]]  && cli[rust]=update_rust 
[[ -x "$(command -v brew)" ]]    && cli[brew]=update_homebrew
[[ -x "$(command -v yay)" ]]     && cli[arch]=update_arch

if [[ -z $* ]]
then
    upgrade_list=( ${(k)cli} )
else
    upgrade_list=( $* )
fi

for upgrade in $upgrade_list
do
    ($cli[$upgrade] |& sed "s/^/[$upgrade]\t| /") &
done

wait

